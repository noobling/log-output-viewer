{"version":3,"sources":["../../src/ThemeContext.ts","../../src/Number.tsx","../../src/Text.tsx","../../src/LineItem.tsx","../../src/Container.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["themes","light","background","numberColor","lineFontColor","lineFontColorFocus","lineBackgroundFocus","dark","ThemeContext","createContext","Number","children","useContext","style","flex","overflow","color","textAlign","textOverflow","whiteSpace","userSelect","fontSize","fontWeight","Text","overflowX","marginLeft","LineItem","number","dangerouslySetInnerHTML","__html","lineHeight","display","cursor","className","React","Container","padding","LogViewer","customTheme","lines","text","selectedTheme","theme","userTheme","value","key","index","line","App","useState","setTheme","selectedColor","setSelectedColor","minWidth","marginRight","marginBottom","onClick","nextTheme","onChange","console","log","hex","currentTheme","ReactDOM","render","document","getElementById"],"mappings":"kMAeaA,EAAiB,CAC5BC,MAAO,CACLC,WADK,UAELC,YAFK,wBAGLC,cAHK,UAILC,mBAJK,UAKLC,oBAAqB,WAEvBC,KAAM,CACJJ,YADI,wBAEJD,WAFI,UAGJI,oBAHI,UAIJF,cAJI,UAKJC,mBAAoB,YAIXG,EAAeC,wBAAcT,EAAnC,MC7BDU,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAClBR,EAAgBS,qBAAxB,GAAQT,YAER,OACE,0BACEU,MAAO,CACLC,KADK,WAELC,SAFK,SAGLC,MAHK,EAILC,UAJK,QAKLC,aALK,WAMLC,WANK,SAOLC,WAPK,OAQLC,SARK,OASLC,WAAY,MAXlB,ICJIC,EAAiB,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SACxB,OACE,0BACEE,MAAO,CACLW,UADK,OAELL,WAFK,WAGLM,WAHK,OAILJ,SAJK,OAKLC,WAAY,MAPlB,I,SCOsBI,E,GAAS,aAAQC,EAAR,EAAQA,OAAR,EACoCf,qBAAnE,GAAM,EADyB,EACzB,sBADyB,EACzB,cAAsCP,EADb,EACaA,mBAG5C,OACE,6BACE,2BACEuB,wBAAyB,CACvBC,OAAQ,CAAC,qBAAD,oFAQZ,yBACEhB,MAAO,CACLiB,WADK,OAELd,MAFK,EAGLe,QAHK,OAILC,OAAQ,WAEVC,UAAU,aAEVC,yBATF,GAUEA,yBAtBN,KCXF,IAAMC,EAAsB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SACrBT,EAAeU,qBAAvB,GAAQV,WACR,OAAO,yBAAKW,MAAO,CAAEX,aAAYkC,QAAS,WAA1C,ICUWC,EAAY,SAAC,GAAD,IAAC,EAAD,EAAC,OAAD,EAAC,MAAeC,EAAhB,EAAgBA,YACjCC,EAAQC,QAAd,SACMC,EAAgBC,YAAoB1C,EAApB0C,MAAmC1C,EAAzD,KACM2C,EAAY,8BAAuBL,GACzC,OACE,wBAAC9B,EAAD,UAAuBoC,MAAOD,GAC5BT,+BACGK,EAAA,KAAU,qBACT,2BAAUM,IAAKC,EAAON,KAAMO,EAAMpB,OAAQmB,EAAQ,U,QCU7CE,EA5BH,WAAO,IAAD,EACUC,mBAAgB,QAD1B,mBACTP,EADS,KACFQ,EADE,OAE0BD,mBAAiB,WAF3C,mBAETE,EAFS,KAEMC,EAFN,KAOhB,OACE,yBAAKvC,MAAO,CAAEkB,QAAS,OAAQK,QAAS,SACtC,yBAAKvB,MAAO,CAAEwC,SAAU,QAASC,YAAa,SAC5C,4BACEzC,MAAO,CAAE0C,aAAc,QACvBC,QAAS,kBAAMN,EAASO,EAAUf,MAFpC,aAIae,EAAUf,IAEvB,kBAAC,eAAD,CAAc1B,MAAOmC,EAAeO,SAbrB,SAAC1C,GACpB2C,QAAQC,IAAI5C,GACZoC,EAAiBpC,EAAM6C,SAcrB,kBAAC,EAAD,CACErB,KAAMA,EACNE,MAAOA,EACPJ,YAAa,CAAEpC,WAAYiD,OAQnC,SAASM,EAAUK,GACjB,MAAwB,SAAjBA,EAA0B,QAAU,OAG7C,IAAItB,EAAI,k5CCjCRuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.78a3c294.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport interface Theme {\n  background: string\n  numberColor: string\n  lineFontColor: string\n  lineFontColorFocus: string\n  lineBackgroundFocus: string\n}\n\nexport interface Themes {\n  light: Theme\n  dark: Theme\n}\n\nexport const themes: Themes = {\n  light: {\n    background: '#e1e4e8',\n    numberColor: 'rgba(149,157,165,.75)',\n    lineFontColor: '#242a2e',\n    lineFontColorFocus: '#e1e4e8',\n    lineBackgroundFocus: '#e1e4e8'\n  },\n  dark: {\n    numberColor: 'rgba(149,157,165,.75)',\n    background: '#242a2e',\n    lineBackgroundFocus: '#2f363d',\n    lineFontColor: '#e1e4e8',\n    lineFontColorFocus: '#2f363d'\n  }\n}\n\nexport const ThemeContext = createContext(themes.dark)\n","import React, { useContext } from 'react'\nimport { ThemeContext } from './ThemeContext'\n\nconst Number: React.FC = ({ children }) => {\n  const { numberColor } = useContext(ThemeContext)\n\n  return (\n    <span\n      style={{\n        flex: '0 0 25px',\n        overflow: 'hidden',\n        color: numberColor,\n        textAlign: 'right',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        fontSize: '12px',\n        fontWeight: 400\n      }}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default Number\n","import React from 'react'\n\nconst Text: React.FC = ({ children }) => {\n  return (\n    <span\n      style={{\n        overflowX: 'auto',\n        whiteSpace: 'pre-wrap',\n        marginLeft: '16px',\n        fontSize: '12px',\n        fontWeight: 400\n      }}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default Text\n","import React, { useContext } from 'react'\nimport Number from './Number'\nimport Text from './Text'\nimport { ThemeContext } from './ThemeContext'\n\ninterface Props {\n  text: string\n  number: number\n}\n\nexport default function LineItem({ text, number }: Props) {\n  const { lineBackgroundFocus, lineFontColor, lineFontColorFocus } = useContext(\n    ThemeContext\n  )\n  return (\n    <div>\n      <style\n        dangerouslySetInnerHTML={{\n          __html: [\n            '.line-item:hover {',\n            `background: ${lineBackgroundFocus};`,\n            `color: ${lineFontColorFocus}; !important;`,\n            '}'\n          ].join('\\n')\n        }}\n      />\n      <div\n        style={{\n          lineHeight: '20px',\n          color: lineFontColor,\n          display: 'flex',\n          cursor: 'pointer'\n        }}\n        className='line-item'\n      >\n        <Number>{number}</Number>\n        <Text>{text}</Text>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { ThemeContext } from './ThemeContext'\n\nconst Container: React.FC = ({ children }) => {\n  const { background } = useContext(ThemeContext)\n  return <div style={{ background, padding: '1.5rem' }}>{children}</div>\n}\n\nexport default Container\n","import * as React from 'react'\nimport LineItem from './LineItem'\nimport Container from './Container'\nimport { ThemeContext, themes, Theme } from './ThemeContext'\n\ntype CustomTheme<T> = {\n  [P in keyof T]?: T[P]\n}\n\ninterface Props {\n  text: string\n  theme?: 'light' | 'dark'\n  customTheme?: CustomTheme<Theme>\n}\n\nexport const LogViewer = ({ text, theme, customTheme }: Props) => {\n  const lines = text.split(/\\r?\\n/)\n  const selectedTheme = theme === 'light' ? themes.light : themes.dark\n  const userTheme = { ...selectedTheme, ...customTheme }\n  return (\n    <ThemeContext.Provider value={userTheme}>\n      <Container>\n        {lines.map((line, index) => (\n          <LineItem key={index} text={line} number={index + 1} />\n        ))}\n      </Container>\n    </ThemeContext.Provider>\n  )\n}\n","import React, { useState } from 'react'\nimport { LogViewer } from 'log-viewer'\nimport { SliderPicker } from 'react-color'\ntype Theme = 'dark' | 'light'\n\nconst App = () => {\n  const [theme, setTheme] = useState<Theme>('dark')\n  const [selectedColor, setSelectedColor] = useState<string>('#242a2e')\n  const handleChange = (color: any) => {\n    console.log(color)\n    setSelectedColor(color.hex)\n  }\n  return (\n    <div style={{ display: 'flex', padding: '2rem' }}>\n      <div style={{ minWidth: '200px', marginRight: '2rem' }}>\n        <button\n          style={{ marginBottom: '2rem' }}\n          onClick={() => setTheme(nextTheme(theme))}\n        >\n          Switch to {nextTheme(theme)}\n        </button>\n        <SliderPicker color={selectedColor} onChange={handleChange} />\n      </div>\n\n      <LogViewer\n        text={text}\n        theme={theme}\n        customTheme={{ background: selectedColor }}\n      />\n    </div>\n  )\n}\n\nexport default App\n\nfunction nextTheme(currentTheme: Theme) {\n  return currentTheme === 'dark' ? 'light' : 'dark'\n}\n\nvar text = `yarn run v1.22.4\n$ start-server-and-test serve http://localhost:8000 cy:run\n1: starting server using command \"npm run serve\"\nand when url \"http://localhost:8000\" is responding with HTTP status code 200\nrunning tests using command \"npm run cy:run\"\n\nnpm WARN lifecycle The node binary used for scripts is /tmp/yarn--1599295401272-0.8535979788498027/node but npm is using /opt/hostedtoolcache/node/10.22.0/x64/bin/node itself. Use the  option to include the path for the node binary npm was executed with.\n\n> gatsby-starter-default@0.1.0 serve /home/runner/work/rebranch/rebranch\n> gatsby serve -p 8000\n\nUsing environment config: 'development'\n⠀\nYou can now view gatsby-starter-default in the browser.\n⠀\n  http://localhost:8000/\nnpm WARN lifecycle The node binary used for scripts is /tmp/yarn--1599295401272-0.8535979788498027/node but npm is using /opt/hostedtoolcache/node/10.22.0/x64/bin/node itself. Use the option to include the path for the node binary npm was executed with.\n\n> gatsby-starter-default@0.1.0 cy:run /home/runner/work/rebranch/rebranch\n> cypress run\n\nIt looks like this is your first time using Cypress: 4.9.0\n\n25l[08:43:24]  Verifying Cypress can run /home/runner/.cache/Cypress/4.9.0/Cypress [started]\n[08:43:30]  Verifying Cypress can run /home/runner/.cache/Cypress/4.9.0/Cypress [completed]\n25h\nOpening Cypress...\n\ntput: No value for $TERM and no -T specified`\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}